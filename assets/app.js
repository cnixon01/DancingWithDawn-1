angular.module("app",["ngRoute"]),angular.module("app").controller("AdminLoginCtrl",["$scope","AdminSvc","$location",function(l,s,u){l.login=function(t,e){l.loginError=!1,l.errorMessage="",s.login(t,e).then(function(t){if(401==t.status)return l.errorMessage=t.data,!(l.loginError=!0);l.$emit("login",t.data),u.path("/admin-account")})},l.register=function(t,e,n,r,a,o,i){if(n!=r)return l.registerError=!0,!(l.errorMessage="Error: Passwords must match");l.registerError=!1,s.register(t,e,n,a,o,i).then(function(t){l.$emit("login",t.data),u.path("/admin-account")})}}]),angular.module("app").service("AdminSvc",["$http",function(i){var l=this;l.getAdmin=function(){return i.get("/api/admin")},l.register=function(t,e,n,r,a,o){return i.post("/api/admin",{username:e,password:n,email:t,firstName:r,lastName:a,phone:o}).then(function(){return l.login(e,n)})},l.login=function(t,e){return i.post("/api/admin-sessions",{username:t,password:e}).then(function(t){return l.token=t.data,i.defaults.headers.common["X-Auth"]=t.data,l.getAdmin()},function(t){return t})},l.logout=function(){delete i.defaults.headers.common["X-Auth"]},l.update=function(t,e,n,r,a,o){return i.put("/api/admin/update",{id:t,username:e,firstName:n,lastName:r,email:a,phone:o})},l.updatePassword=function(t,e){return i.put("/api/admin/updatePassword",{id:t,password:e})},l.updateBio=function(t,e){return i.put("/api/admin/updateBio",{id:t,bio:e})}}]),angular.module("app").controller("AdminCtrl",["$scope","AdminSvc","$location",function(n,t,e){n.$on("login",function(t,e){n.currentAdmin=e}),n.logout=function(){t.logout(),delete n.currentAdmin,e.path("/admin")}}]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","$location",function(n,t,e){n.$on("login",function(t,e){n.currentUser=e}),n.logout=function(){t.logout(),delete n.currentUser,e.path("/login")}}]),angular.module("app").controller("ChildCtrl",["$scope","UserSvc","$location",function(t,o,i){t.addChild=function(t,e,n,r,a){o.addChild(t,e,n,r,a).then(function(t){i.path("/user-account")})}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(n,r,a){n.login=function(t,e){n.loginError=!1,n.errorMessage="",r.login(t,e).then(function(t){if(401==t.status)return n.errorMessage=t.data,!(n.loginError=!0);n.$emit("login",t.data),a.path("/user-account")})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(e,t){e.addPost=function(){e.postBody&&(console.log(e.postBody),t.create({body:e.postBody}).success(function(t){e.posts.unshift(t),e.postBody=null}))},t.fetch().success(function(t){e.posts=t})}]),angular.module("app").service("PostsSvc",["$http",function(e){this.fetch=function(){return e.get("/api/posts")},this.create=function(t){return e.post("/api/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(d,c,p){d.register=function(t,e,n,r,a,o,i,l,s,u){if(e!=n)return d.registerError=!0,!(d.errorMessage="Error: Passwords must match");d.registerError=!1,c.register(t,e,r,a,o,i,l,s,u).then(function(t){d.$emit("login",t.data),p.path("/user-account")})}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{templateUrl:"index.html"}).when("/classes",{templateUrl:"classes.html"}).when("/about",{templateUrl:"about.html"}).when("/faq",{templateUrl:"faq.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login-form.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"registration-form.html"}).when("/user-account",{controller:"UserCtrl",templateUrl:"user-account.html"}).when("/update-user-account",{controller:"UpdateCtrl",templateUrl:"update-user-account.html"}).when("/update-user-password",{controller:"UpdateCtrl",templateUrl:"update-user-password.html"}).when("/add-child",{controller:"ChildCtrl",templateUrl:"add-child.html"}).when("/update-child",{controller:"UserCtrl",templateUrl:"update-child.html"}).when("/user-classes",{templateUrl:"user-classes.html"}).when("/user-photos",{templateUrl:"user-photos.html"}).when("/user-payments",{templateUrl:"user-payments.html"}).when("/user-forms",{templateUrl:"user-forms.html"}).when("/admin",{controller:"AdminLoginCtrl",templateUrl:"admin/admin-login.html"}).when("/admin-register",{controller:"AdminLoginCtrl",templateUrl:"admin/registration.html"}).when("/admin-account",{templateUrl:"admin/admin-account.html"}).when("/update-admin-account",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-account.html"}).when("/update-admin-password",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-password.html"}).when("/update-admin-bio",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-bio.html"}).when("/admin-classes",{templateUrl:"admin/admin-classes.html"}).when("/admin-clients",{templateUrl:"admin/admin-clients.html"}).when("/admin-photos",{templateUrl:"admin/admin-photos.html"}).when("/admin-payments",{templateUrl:"admin/admin-payments.html"}).when("/admin-forms",{templateUrl:"admin/admin-forms.html"}),e.html5Mode(!0)}]),angular.module("app").controller("UpdateAdminCtrl",["$scope","AdminSvc","$location",function(r,i,l){r.update=function(t,e,n,r,a,o){i.update(t,e,n,r,a,o).then(function(t){l.path("/admin-account")})},r.updatePassword=function(t,e,n){if(e!=n)return!(r.passwordsMatch=!0);r.passwordsMatch=!1,i.updatePassword(t,e).then(function(t){l.path("/admin-account")})},r.updateBio=function(t,e){i.updateBio(t,e).then(function(t){l.path("/admin-account")})}}]),angular.module("app").controller("UpdateCtrl",["$scope","UserSvc","$location",function(r,u,d){r.update=function(t,e,n,r,a,o,i,l,s){u.update(t,e,n,r,a,o,i,l,s).then(function(t){d.path("/user-account")})},r.updatePassword=function(t,e,n){if(e!=n)return!(r.passwordsMatch=!0);r.passwordsMatch=!1,u.updatePassword(t,e).then(function(t){d.path("/user-account")})}}]),angular.module("app").controller("UserCtrl",["$scope","UserSvc","$location",function(e,n,r){n.getAllChildren().then(function(t){e.children=t.data}),e.setChildToUpdate=function(t){e.currentUser.childToUpdate=t},e.updateChild=function(t){n.updateChild(t).then(function(t){r.path("/user-account")})},e.deleteChild=function(t){n.deleteChild(t).then(function(t){r.path("/user-account")})}}]),angular.module("app").service("UserSvc",["$http",function(u){var d=this;d.getUser=function(){return u.get("/api/users")},d.register=function(t,e,n,r,a,o,i,l,s){return u.post("/api/users",{email:t,password:e,firstName:n,lastName:r,streetAddress:a,city:o,state:i,zip:l,phone:s}).then(function(){return d.login(t,e)})},d.login=function(t,e){return u.post("/api/sessions",{email:t,password:e}).then(function(t){return d.token=t.data,u.defaults.headers.common["X-Auth"]=t.data,d.getUser()},function(t){return t})},d.logout=function(){delete u.defaults.headers.common["X-Auth"]},d.update=function(t,e,n,r,a,o,i,l,s){return u.put("/api/users/update",{id:t,email:e,firstName:n,lastName:r,streetAddress:a,city:o,state:i,zip:l,phone:s})},d.updatePassword=function(t,e){return u.put("/api/users/updatePassword",{id:t,password:e})},d.updateChild=function(t){return u.put("/api/users/updateChild",t)},d.deleteChild=function(t){return u.put("/api/users/deleteChild",t)},d.addChild=function(t,e,n,r,a){return u.post("/api/users/addChild",{adultId:t,firstName:e,lastName:n,dob:r,notes:a})},d.getAllChildren=function(){return u.get("/api/users/getAllChildren")}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFkbWluLmxvZ2luLmN0cmwuanMiLCJhZG1pbi5zdmMuanMiLCJhZG1pbmFwcC5jdHJsLmpzIiwiYXBwbGljYXRpb24uY3RybC5qcyIsImNoaWxkLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuY3RybC5qcyIsInBvc3RzLnN2Yy5qcyIsInJlZ2lzdGVyLmN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1cGRhdGUuYWRtaW4uY3RybC5qcyIsInVwZGF0ZS5jdHJsLmpzIiwidXNlci5jdHJsLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCJBZG1pblN2YyIsIiRsb2NhdGlvbiIsImxvZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImxvZ2luRXJyb3IiLCJlcnJvck1lc3NhZ2UiLCJ0aGVuIiwicmVzIiwic3RhdHVzIiwiZGF0YSIsIiRlbWl0IiwicGF0aCIsInJlZ2lzdGVyIiwiZW1haWwiLCJjaGVja3Bhc3MiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInBob25lIiwicmVnaXN0ZXJFcnJvciIsInJlc3BvbnNlIiwic2VydmljZSIsIiRodHRwIiwic3ZjIiwidGhpcyIsImdldEFkbWluIiwiZ2V0IiwicG9zdCIsInZhbCIsInRva2VuIiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIiwiZXJyIiwibG9nb3V0IiwidXBkYXRlIiwiaWQiLCJwdXQiLCJ1cGRhdGVQYXNzd29yZCIsIm5ld1Bhc3N3b3JkIiwidXBkYXRlQmlvIiwiYmlvIiwiJG9uIiwiXyIsImFkbWluIiwiY3VycmVudEFkbWluIiwiVXNlclN2YyIsInVzZXIiLCJjdXJyZW50VXNlciIsImFkZENoaWxkIiwiYWR1bHRJZCIsImRvYiIsIm5vdGVzIiwiUG9zdHNTdmMiLCJhZGRQb3N0IiwicG9zdEJvZHkiLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlIiwiYm9keSIsInN1Y2Nlc3MiLCJwb3N0cyIsInVuc2hpZnQiLCJmZXRjaCIsInN0cmVldEFkZHJlc3MiLCJjaXR5Iiwic3RhdGUiLCJ6aXAiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiaHRtbDVNb2RlIiwiY2hlY2tQYXNzd29yZCIsInBhc3N3b3Jkc01hdGNoIiwiZ2V0QWxsQ2hpbGRyZW4iLCJjaGlsZHJlbiIsInNldENoaWxkVG9VcGRhdGUiLCJjaGlsZCIsImNoaWxkVG9VcGRhdGUiLCJ1cGRhdGVDaGlsZCIsImRlbGV0ZUNoaWxkIiwiZ2V0VXNlciJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQUFDLE9BQUEsTUFBQSxDQUNBLFlDREFELFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxpQkFBQSxDQUFBLFNBQUEsV0FBQSxZQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEdBRUFGLEVBQUFHLE1BQUEsU0FBQUMsRUFBQUMsR0FDQUwsRUFBQU0sWUFBQSxFQUNBTixFQUFBTyxhQUFBLEdBRUFOLEVBQUFFLE1BQUFDLEVBQUFDLEdBQ0FHLEtBQUEsU0FBQUMsR0FDQSxHQUFBLEtBQUFBLEVBQUFDLE9BR0EsT0FGQVYsRUFBQU8sYUFBQUUsRUFBQUUsT0FDQVgsRUFBQU0sWUFBQSxHQUdBTixFQUFBWSxNQUFBLFFBQUFILEVBQUFFLE1BQ0FULEVBQUFXLEtBQUEscUJBS0FiLEVBQUFjLFNBQUEsU0FBQUMsRUFBQVgsRUFBQUMsRUFBQVcsRUFBQUMsRUFBQUMsRUFBQUMsR0FDQSxHQUFBZCxHQUFBVyxFQUdBLE9BRkFoQixFQUFBb0IsZUFBQSxJQUNBcEIsRUFBQU8sYUFBQSwrQkFJQVAsRUFBQW9CLGVBQUEsRUFFQW5CLEVBQUFhLFNBQUFDLEVBQUFYLEVBQUFDLEVBQUFZLEVBQUFDLEVBQUFDLEdBQ0FYLEtBQUEsU0FBQWEsR0FDQXJCLEVBQUFZLE1BQUEsUUFBQVMsRUFBQVYsTUFDQVQsRUFBQVcsS0FBQSx3QkNoQ0FoQixRQUFBQyxPQUFBLE9BQ0F3QixRQUFBLFdBQUEs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QUFBK0MsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQWpELEdBQ0EsT0FBQUksRUFBQWUsSUFBQSxvQkFBQSxDQUNBRCxHQUFBQSxFQUNBdEIsTUFBQUEsRUFDQUUsVUFBQUEsRUFDQUMsU0FBQUEsRUFDQStDLGNBQUFBLEVBQ0FDLEtBQUFBLEVBQ0FDLE1BQUFBLEVBQ0FDLElBQUFBLEVBQ0FqRCxNQUFBQSxLQUlBSyxFQUFBZSxlQUFBLFNBQUFGLEVBQUFHLEdBQ0EsT0FBQWpCLEVBQUFlLElBQUEsNEJBQUEsQ0FDQUQsR0FBQUEsRUFDQWhDLFNBQUFtQyxLQUlBaEIsRUFBQTBELFlBQUEsU0FBQUYsR0FDQSxPQUFBekQsRUFBQWUsSUFBQSx5QkFBQTBDLElBR0F4RCxFQUFBMkQsWUFBQSxTQUFBSCxHQUNBLE9BQUF6RCxFQUFBZSxJQUFBLHlCQUFBMEMsSUFHQXhELEVBQUEwQixTQUFBLFNBQUFDLEVBQUFsQyxFQUFBQyxFQUFBa0MsRUFBQUMsR0FDQSxPQUFBOUIsRUFBQUssS0FBQSxzQkFBQSxDQUNBdUIsUUFBQUEsRUFDQWxDLFVBQUFBLEVBQ0FDLFNBQUFBLEVBQ0FrQyxJQUFBQSxFQUNBQyxNQUFBQSxLQUlBN0IsRUFBQXFELGVBQUEsV0FDQSxPQUFBdEQsRUFBQUksSUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xuXHQnbmdSb3V0ZSdcbl0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignQWRtaW5Mb2dpbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIEFkbWluU3ZjLCAkbG9jYXRpb24pIHtcblxuXHQkc2NvcGUubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG5cdFx0JHNjb3BlLmxvZ2luRXJyb3IgPSBmYWxzZVxuXHRcdCRzY29wZS5lcnJvck1lc3NhZ2UgPSAnJ1xuXG5cdFx0QWRtaW5TdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuXHRcdC50aGVuKGZ1bmN0aW9uIChyZXMpIHtcblx0XHRcdGlmKHJlcy5zdGF0dXMgPT0gNDAxKSB7XG5cdFx0XHRcdCRzY29wZS5lcnJvck1lc3NhZ2UgPSByZXMuZGF0YVxuXHRcdFx0XHQkc2NvcGUubG9naW5FcnJvciA9IHRydWVcblx0XHRcdFx0cmV0dXJuIGZhbHNlXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHQkc2NvcGUuJGVtaXQoJ2xvZ2luJywgcmVzLmRhdGEpXG5cdFx0XHRcdCRsb2NhdGlvbi5wYXRoKCcvYWRtaW4tYWNjb3VudCcpXG5cdFx0XHR9XG5cdFx0fSlcblx0fVxuXG5cdCRzY29wZS5yZWdpc3RlciA9IGZ1bmN0aW9uIChlbWFpbCwgdXNlcm5hbWUsIHBhc3N3b3JkLCBjaGVja3Bhc3MsIGZpcnN0TmFtZSwgbGFzdE5hbWUsIHBob25lKSB7XG5cdFx0aWYgKHBhc3N3b3JkICE9IGNoZWNrcGFzcykge1xuXHRcdFx0JHNjb3BlLnJlZ2lzdGVyRXJyb3IgPSB0cnVlXG5cdFx0XHQkc2NvcGUuZXJyb3JNZXNzYWdlID0gJ0Vycm9yOiBQYXNzd29yZHMgbXVzdCBtYXRjaCdcblx0XHRcdHJldHVybiBmYWxzZVxuXHRcdH1cblxuXHRcdCRzY29wZS5yZWdpc3RlckVycm9yID0gZmFsc2VcblxuXHRcdEFkbWluU3ZjLnJlZ2lzdGVyKGVtYWlsLCB1c2VybmFtZSwgcGFzc3dvcmQsIGZpcnN0TmFtZSwgbGFzdE5hbWUsIHBob25lKVxuXHRcdC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXHRcdFx0JHNjb3BlLiRlbWl0KCdsb2dpbicsIHJlc3BvbnNlLmRhdGEpXG5cdFx0XHQkbG9jYXRpb24ucGF0aCgnL2FkbWluLWFjY291bnQnKVxuXHRcdH0pXG5cdH1cbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnQWRtaW5TdmMnLCBmdW5jdGlvbiAoJGh0dHApIHtcblx0dmFyIHN2YyA9IHRoaXNcblxuXHRzdmMuZ2V0QWRtaW4gPSBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS9hZG1pbicpXG5cdH1cblxuXHRzdmMucmVnaXN0ZXIgPSBmdW5jdGlvbiAoZW1haWwsIHVzZXJuYW1lLCBwYXNzd29yZCwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgcGhvbmUpIHtcblx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hZG1pbicsIHtcblx0XHRcdHVzZXJuYW1lOiB1c2VybmFtZSxcblx0XHRcdHBhc3N3b3JkOiBwYXNzd29yZCxcblx0XHRcdGVtYWlsOiBlbWFpbCxcblx0XHRcdGZpcnN0TmFtZTogZmlyc3ROYW1lLFxuXHRcdFx0bGFzdE5hbWU6IGxhc3ROYW1lLFxuXHRcdFx0cGhvbmU6IHBob25lXG5cdFx0fSkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gc3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcblx0XHR9KVxuXHR9XG5cblx0c3ZjLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL2FkbWluLXNlc3Npb25zJywge1xuXHRcdFx0dXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmRcblx0XHR9KVxuXHRcdC50aGVuKGZ1bmN0aW9uICh2YWwpIHtcblx0XHRcdHN2Yy50b2tlbiA9IHZhbC5kYXRhXG5cdFx0XHQkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1BdXRoJ10gPSB2YWwuZGF0YVxuXHRcdFx0cmV0dXJuIHN2Yy5nZXRBZG1pbigpXG5cdFx0fSwgZnVuY3Rpb24oZXJyKSB7XG5cdFx0XHRyZXR1cm4gZXJyXG5cdFx0fSlcblx0fVxuXG5cdHN2Yy5sb2dvdXQgPSBmdW5jdGlvbigpIHtcblx0XHRkZWxldGUgJGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ1gtQXV0aCddXG5cdH1cblxuXHRzdmMudXBkYXRlID0gZnVuY3Rpb24gKGlkLCB1c2VybmFtZSwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgZW1haWwsIHBob25lKSB7XG5cdFx0cmV0dXJuICRodHRwLnB1dCgnL2FwaS9hZG1pbi91cGRhdGUnLCB7XG5cdFx0XHRpZDogaWQsXG5cdFx0XHR1c2VybmFtZTogdXNlcm5hbWUsXG5cdFx0XHRmaXJzdE5hbWU6IGZpcnN0TmFtZSxcblx0XHRcdGxhc3ROYW1lOiBsYXN0TmFtZSxcblx0XHRcdGVtYWlsOiBlbWFpbCxcblx0XHRcdHBob25lOiBwaG9uZVxuXHRcdH0pXG5cdH1cblxuXHRzdmMudXBkYXRlUGFzc3dvcmQgPSBmdW5jdGlvbiAoaWQsIG5ld1Bhc3N3b3JkKSB7XG5cdFx0cmV0dXJuICRodHRwLnB1dCgnL2FwaS9hZG1pbi91cGRhdGVQYXNzd29yZCcsIHtcblx0XHRcdGlkOiBpZCxcblx0XHRcdHBhc3N3b3JkOiBuZXdQYXNzd29yZFxuXHRcdH0pXG5cdH1cblxuXHRzdmMudXBkYXRlQmlvID0gZnVuY3Rpb24gKGlkLCBiaW8pIHtcblx0XHRyZXR1cm4gJGh0dHAucHV0KCcvYXBpL2FkbWluL3VwZGF0ZUJpbycsIHtcblx0XHRcdGlkOiBpZCxcblx0XHRcdGJpbzogYmlvXG5cdFx0fSlcblx0fVxuXG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0FkbWluQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIEFkbWluU3ZjLCAkbG9jYXRpb24pIHtcblx0XG5cdCRzY29wZS4kb24oJ2xvZ2luJywgZnVuY3Rpb24oXywgYWRtaW4pIHtcblx0XHQkc2NvcGUuY3VycmVudEFkbWluID0gYWRtaW5cblx0fSlcblxuXHQkc2NvcGUubG9nb3V0ID0gZnVuY3Rpb24oKSB7XG5cdFx0QWRtaW5TdmMubG9nb3V0KClcblx0XHRkZWxldGUgJHNjb3BlLmN1cnJlbnRBZG1pblxuXHRcdCRsb2NhdGlvbi5wYXRoKCcvYWRtaW4nKVxuXHR9XG5cbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignQXBwbGljYXRpb25DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2YywgJGxvY2F0aW9uKSB7XG5cdCRzY29wZS4kb24oJ2xvZ2luJywgZnVuY3Rpb24oXywgdXNlcikge1xuXHRcdCRzY29wZS5jdXJyZW50VXNlciA9IHVzZXJcblx0fSlcblxuXHQkc2NvcGUubG9nb3V0ID0gZnVuY3Rpb24oKSB7XG5cdFx0VXNlclN2Yy5sb2dvdXQoKVxuXHRcdGRlbGV0ZSAkc2NvcGUuY3VycmVudFVzZXJcblx0XHQkbG9jYXRpb24ucGF0aCgnL2xvZ2luJylcblx0fVxuXG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0NoaWxkQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgVXNlclN2YywgJGxvY2F0aW9uKSB7XG5cblx0JHNjb3BlLmFkZENoaWxkID0gZnVuY3Rpb24gKGFkdWx0SWQsIGZpcnN0TmFtZSwgbGFzdE5hbWUsIGRvYiwgbm90ZXMpIHtcblx0XHRVc2VyU3ZjLmFkZENoaWxkKGFkdWx0SWQsIGZpcnN0TmFtZSwgbGFzdE5hbWUsIGRvYiwgbm90ZXMpXG5cdFx0LnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cdFx0XHQkbG9jYXRpb24ucGF0aCgnL3VzZXItYWNjb3VudCcpXG5cdFx0fSlcblx0fVxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXJTdmMsICRsb2NhdGlvbikge1xuXG5cdCRzY29wZS5sb2dpbiA9IGZ1bmN0aW9uIChlbWFpbCwgcGFzc3dvcmQpIHtcblx0XHQkc2NvcGUubG9naW5FcnJvciA9IGZhbHNlXG5cdFx0JHNjb3BlLmVycm9yTWVzc2FnZSA9ICcnXG5cblx0XHRVc2VyU3ZjLmxvZ2luKGVtYWlsLCBwYXNzd29yZClcblx0XHQudGhlbihmdW5jdGlvbiAocmVzKSB7XG5cdFx0XHRpZihyZXMuc3RhdHVzID09IDQwMSkge1xuXHRcdFx0XHQkc2NvcGUuZXJyb3JNZXNzYWdlID0gcmVzLmRhdGFcblx0XHRcdFx0JHNjb3BlLmxvZ2luRXJyb3IgPSB0cnVlXG5cdFx0XHRcdHJldHVybiBmYWxzZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0JHNjb3BlLiRlbWl0KCdsb2dpbicsIHJlcy5kYXRhKVxuXHRcdFx0XHQkbG9jYXRpb24ucGF0aCgnL3VzZXItYWNjb3VudCcpXG5cdFx0XHR9XG5cdFx0fSlcblx0fVxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdQb3N0c0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBQb3N0c1N2Yykge1xuXG5cdCRzY29wZS5hZGRQb3N0ID0gZnVuY3Rpb24gKCkge1xuXHRcdGlmKCRzY29wZS5wb3N0Qm9keSkge1xuXHRcdFx0Y29uc29sZS5sb2coJHNjb3BlLnBvc3RCb2R5KVxuXHRcdFx0UG9zdHNTdmMuY3JlYXRlKHtcblx0XHRcdFx0Ym9keTogJHNjb3BlLnBvc3RCb2R5XG5cdFx0XHR9KS5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0KSB7XG5cdFx0XHRcdCRzY29wZS5wb3N0cy51bnNoaWZ0KHBvc3QpXG5cdFx0XHRcdCRzY29wZS5wb3N0Qm9keSA9IG51bGxcblx0XHRcdH0pXG5cdFx0fVxuXHR9XG5cdFxuXHRQb3N0c1N2Yy5mZXRjaCgpLnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3RzKSB7XG5cdFx0JHNjb3BlLnBvc3RzID0gcG9zdHNcblx0fSlcbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnUG9zdHNTdmMnLCBmdW5jdGlvbiAoJGh0dHApIHtcblx0dGhpcy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzJylcblx0fVxuXHR0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uIChwb3N0KSB7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoJy9hcGkvcG9zdHMnLCBwb3N0KVxuXHR9XG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ1JlZ2lzdGVyQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgVXNlclN2YywgJGxvY2F0aW9uKSB7XG5cblx0JHNjb3BlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKGVtYWlsLCBwYXNzd29yZCwgY2hlY2twYXNzLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBzdHJlZXRBZGRyZXNzLCBjaXR5LCBzdGF0ZSwgemlwLCBwaG9uZSkge1xuXHRcdGlmIChwYXNzd29yZCAhPSBjaGVja3Bhc3MpIHtcblx0XHRcdCRzY29wZS5yZWdpc3RlckVycm9yID0gdHJ1ZVxuXHRcdFx0JHNjb3BlLmVycm9yTWVzc2FnZSA9ICdFcnJvcjogUGFzc3dvcmRzIG11c3QgbWF0Y2gnXG5cdFx0XHRyZXR1cm4gZmFsc2Vcblx0XHR9XG5cblx0XHQkc2NvcGUucmVnaXN0ZXJFcnJvciA9IGZhbHNlXG5cblx0XHRVc2VyU3ZjLnJlZ2lzdGVyKGVtYWlsLCBwYXNzd29yZCwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgc3RyZWV0QWRkcmVzcywgY2l0eSwgc3RhdGUsIHppcCwgcGhvbmUpXG5cdFx0LnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cdFx0XHQkc2NvcGUuJGVtaXQoJ2xvZ2luJywgcmVzcG9uc2UuZGF0YSlcblx0XHRcdCRsb2NhdGlvbi5wYXRoKCcvdXNlci1hY2NvdW50Jylcblx0XHR9KVxuXHR9XG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XG5cdCRyb3V0ZVByb3ZpZGVyXG5cdC53aGVuKCcvJywgeyB0ZW1wbGF0ZVVybDogJ2luZGV4Lmh0bWwnIH0pXG5cdC53aGVuKCcvY2xhc3NlcycsIHsgdGVtcGxhdGVVcmw6ICdjbGFzc2VzLmh0bWwnIH0pXG5cdC53aGVuKCcvYWJvdXQnLCB7IHRlbXBsYXRlVXJsOiAnYWJvdXQuaHRtbCcgfSlcblx0LndoZW4oJy9mYXEnLCB7IHRlbXBsYXRlVXJsOiAnZmFxLmh0bWwnIH0pXG5cblx0LndoZW4oJy9sb2dpbicsIHsgY29udHJvbGxlcjogJ0xvZ2luQ3RybCcsIHRlbXBsYXRlVXJsOiAnbG9naW4tZm9ybS5odG1sJyB9KVxuXHQud2hlbignL3JlZ2lzdGVyJywgeyBjb250cm9sbGVyOiAnUmVnaXN0ZXJDdHJsJywgdGVtcGxhdGVVcmw6ICdyZWdpc3RyYXRpb24tZm9ybS5odG1sJyB9KVxuXHRcblx0LndoZW4oJy91c2VyLWFjY291bnQnLCB7IGNvbnRyb2xsZXI6ICdVc2VyQ3RybCcsIHRlbXBsYXRlVXJsOiAndXNlci1hY2NvdW50Lmh0bWwnIH0pXG5cdC53aGVuKCcvdXBkYXRlLXVzZXItYWNjb3VudCcsIHsgY29udHJvbGxlcjogJ1VwZGF0ZUN0cmwnLCB0ZW1wbGF0ZVVybDogJ3VwZGF0ZS11c2VyLWFjY291bnQuaHRtbCcgfSlcblx0LndoZW4oJy91cGRhdGUtdXNlci1wYXNzd29yZCcsIHsgY29udHJvbGxlcjogJ1VwZGF0ZUN0cmwnLCB0ZW1wbGF0ZVVybDogJ3VwZGF0ZS11c2VyLXBhc3N3b3JkLmh0bWwnIH0pXG5cblx0LndoZW4oJy9hZGQtY2hpbGQnLCB7IGNvbnRyb2xsZXI6ICdDaGlsZEN0cmwnLCB0ZW1wbGF0ZVVybDogJ2FkZC1jaGlsZC5odG1sJyB9KVxuXHQud2hlbignL3VwZGF0ZS1jaGlsZCcsIHsgY29udHJvbGxlcjogJ1VzZXJDdHJsJywgdGVtcGxhdGVVcmw6ICd1cGRhdGUtY2hpbGQuaHRtbCcgfSlcblxuXHQud2hlbignL3VzZXItY2xhc3NlcycsIHsgdGVtcGxhdGVVcmw6ICd1c2VyLWNsYXNzZXMuaHRtbCcgfSlcblx0LndoZW4oJy91c2VyLXBob3RvcycsIHsgdGVtcGxhdGVVcmw6ICd1c2VyLXBob3Rvcy5odG1sJyB9KVxuXHQud2hlbignL3VzZXItcGF5bWVudHMnLCB7IHRlbXBsYXRlVXJsOiAndXNlci1wYXltZW50cy5odG1sJyB9KVxuXHQud2hlbignL3VzZXItZm9ybXMnLCB7IHRlbXBsYXRlVXJsOiAndXNlci1mb3Jtcy5odG1sJyB9KVxuXHRcblx0LndoZW4oJy9hZG1pbicsIHsgY29udHJvbGxlcjogJ0FkbWluTG9naW5DdHJsJywgdGVtcGxhdGVVcmw6ICdhZG1pbi9hZG1pbi1sb2dpbi5odG1sJyB9KVxuXHQud2hlbignL2FkbWluLXJlZ2lzdGVyJywgeyBjb250cm9sbGVyOiAnQWRtaW5Mb2dpbkN0cmwnLCB0ZW1wbGF0ZVVybDogJ2FkbWluL3JlZ2lzdHJhdGlvbi5odG1sJyB9KVxuXG5cdC53aGVuKCcvYWRtaW4tYWNjb3VudCcsIHsgdGVtcGxhdGVVcmw6ICdhZG1pbi9hZG1pbi1hY2NvdW50Lmh0bWwnIH0pXG5cdC53aGVuKCcvdXBkYXRlLWFkbWluLWFjY291bnQnLCB7IGNvbnRyb2xsZXI6ICdVcGRhdGVBZG1pbkN0cmwnLCB0ZW1wbGF0ZVVybDogJ2FkbWluL3VwZGF0ZS1hZG1pbi1hY2NvdW50Lmh0bWwnfSlcblx0LndoZW4oJy91cGRhdGUtYWRtaW4tcGFzc3dvcmQnLCB7IGNvbnRyb2xsZXI6ICdVcGRhdGVBZG1pbkN0cmwnLCB0ZW1wbGF0ZVVybDogJ2FkbWluL3VwZGF0ZS1hZG1pbi1wYXNzd29yZC5odG1sJ30pXG5cdC53aGVuKCcvdXBkYXRlLWFkbWluLWJpbycsIHsgY29udHJvbGxlcjogJ1VwZGF0ZUFkbWluQ3RybCcsIHRlbXBsYXRlVXJsOiAnYWRtaW4vdXBkYXRlLWFkbWluLWJpby5odG1sJ30pXG5cblx0LndoZW4oJy9hZG1pbi1jbGFzc2VzJywge3RlbXBsYXRlVXJsOiAnYWRtaW4vYWRtaW4tY2xhc3Nlcy5odG1sJ30pXG5cdC53aGVuKCcvYWRtaW4tY2xpZW50cycsIHt0ZW1wbGF0ZVVybDogJ2FkbWluL2FkbWluLWNsaWVudHMuaHRtbCd9KVxuXHQud2hlbignL2FkbWluLXBob3RvcycsIHt0ZW1wbGF0ZVVybDogJ2FkbWluL2FkbWluLXBob3Rvcy5odG1sJ30pXG5cdC53aGVuKCcvYWRtaW4tcGF5bWVudHMnLCB7dGVtcGxhdGVVcmw6ICdhZG1pbi9hZG1pbi1wYXltZW50cy5odG1sJ30pXG5cdC53aGVuKCcvYWRtaW4tZm9ybXMnLCB7dGVtcGxhdGVVcmw6ICdhZG1pbi9hZG1pbi1mb3Jtcy5odG1sJ30pXG5cblx0JGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdVcGRhdGVBZG1pbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIEFkbWluU3ZjLCAkbG9jYXRpb24pIHtcbiAgICAkc2NvcGUudXBkYXRlID0gZnVuY3Rpb24gKGlkLCB1c2VybmFtZSwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgZW1haWwsIHBob25lKSB7XG4gICAgICAgIEFkbWluU3ZjLnVwZGF0ZShpZCwgdXNlcm5hbWUsIGZpcnN0TmFtZSwgbGFzdE5hbWUsIGVtYWlsLCBwaG9uZSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSl7XG4gICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy9hZG1pbi1hY2NvdW50JylcbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgJHNjb3BlLnVwZGF0ZVBhc3N3b3JkID0gZnVuY3Rpb24gKGlkLCBuZXdQYXNzd29yZCwgY2hlY2tQYXNzd29yZCkge1xuICAgICAgICBpZiAobmV3UGFzc3dvcmQgIT0gY2hlY2tQYXNzd29yZCkge1xuICAgICAgICAgICAgJHNjb3BlLnBhc3N3b3Jkc01hdGNoID0gdHJ1ZVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cblxuICAgICAgICAkc2NvcGUucGFzc3dvcmRzTWF0Y2ggPSBmYWxzZVxuXG4gICAgICAgIEFkbWluU3ZjLnVwZGF0ZVBhc3N3b3JkKGlkLCBuZXdQYXNzd29yZClcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICAkbG9jYXRpb24ucGF0aCgnL2FkbWluLWFjY291bnQnKVxuICAgICAgICAgICAgfSlcbiAgICB9XG5cbiAgICAkc2NvcGUudXBkYXRlQmlvID0gZnVuY3Rpb24gKGlkLCBiaW8pIHtcbiAgICAgICAgQWRtaW5TdmMudXBkYXRlQmlvKGlkLCBiaW8pXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy9hZG1pbi1hY2NvdW50JylcbiAgICAgICAgICAgIH0pXG5cbiAgICB9XG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ1VwZGF0ZUN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXJTdmMsICRsb2NhdGlvbikge1xuXHQkc2NvcGUudXBkYXRlID0gZnVuY3Rpb24gKGlkLCBlbWFpbCwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgc3RyZWV0QWRkcmVzcywgY2l0eSwgc3RhdGUsIHppcCwgcGhvbmUpIHtcblx0XHRVc2VyU3ZjLnVwZGF0ZShpZCwgZW1haWwsIGZpcnN0TmFtZSwgbGFzdE5hbWUsIHN0cmVldEFkZHJlc3MsIGNpdHksIHN0YXRlLCB6aXAsIHBob25lKVxuXHRcdC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXHRcdFx0JGxvY2F0aW9uLnBhdGgoJy91c2VyLWFjY291bnQnKVxuXHRcdH0pXG5cdH1cblxuXHQkc2NvcGUudXBkYXRlUGFzc3dvcmQgPSBmdW5jdGlvbiAoaWQsIG5ld1Bhc3N3b3JkLCBjaGVja1Bhc3N3b3JkKSB7XG5cdFx0aWYgKG5ld1Bhc3N3b3JkICE9IGNoZWNrUGFzc3dvcmQpIHtcblx0XHRcdCRzY29wZS5wYXNzd29yZHNNYXRjaCA9IHRydWVcblx0XHRcdHJldHVybiBmYWxzZVxuXHRcdH1cblxuXHRcdCRzY29wZS5wYXNzd29yZHNNYXRjaCA9IGZhbHNlXG5cdFxuXHRcdFVzZXJTdmMudXBkYXRlUGFzc3dvcmQoaWQsIG5ld1Bhc3N3b3JkKVxuXHRcdC50aGVuKGZ1bmN0aW9uIChyZXMpIHtcblx0XHRcdCRsb2NhdGlvbi5wYXRoKCcvdXNlci1hY2NvdW50Jylcblx0XHR9KVxuXHR9XG5cbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignVXNlckN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXJTdmMsICRsb2NhdGlvbikge1xuXG5cdFVzZXJTdmMuZ2V0QWxsQ2hpbGRyZW4oKS50aGVuKGZ1bmN0aW9uKHJlcykge1xuXHRcdCRzY29wZS5jaGlsZHJlbiA9IHJlcy5kYXRhXG5cdH0pXG5cblx0JHNjb3BlLnNldENoaWxkVG9VcGRhdGUgPSBmdW5jdGlvbihjaGlsZCkge1xuXHRcdCRzY29wZS5jdXJyZW50VXNlci5jaGlsZFRvVXBkYXRlID0gY2hpbGRcblx0fVxuXG5cdCRzY29wZS51cGRhdGVDaGlsZCA9IGZ1bmN0aW9uKGNoaWxkKSB7XG5cdFx0VXNlclN2Yy51cGRhdGVDaGlsZChjaGlsZClcblx0XHQudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcblx0XHRcdCRsb2NhdGlvbi5wYXRoKCcvdXNlci1hY2NvdW50Jylcblx0XHR9KVxuXHR9XG5cblx0JHNjb3BlLmRlbGV0ZUNoaWxkID0gZnVuY3Rpb24oY2hpbGQpIHtcblx0XHRVc2VyU3ZjLmRlbGV0ZUNoaWxkKGNoaWxkKVxuXHRcdC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXHRcdFx0JGxvY2F0aW9uLnBhdGgoJy91c2VyLWFjY291bnQnKVxuXHRcdH0pXG5cdH1cblxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG5cdHZhciBzdmMgPSB0aGlzXG5cblx0c3ZjLmdldFVzZXIgPSBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycpXG5cdH1cblxuXHRzdmMucmVnaXN0ZXIgPSBmdW5jdGlvbiAoZW1haWwsIHBhc3N3b3JkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBzdHJlZXRBZGRyZXNzLCBjaXR5LCBzdGF0ZSwgemlwLCBwaG9uZSkge1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3VzZXJzJywge1xuXHRcdFx0ZW1haWw6IGVtYWlsLFxuXHRcdFx0cGFzc3dvcmQ6IHBhc3N3b3JkLFxuXHRcdFx0Zmlyc3ROYW1lOiBmaXJzdE5hbWUsXG5cdFx0XHRsYXN0TmFtZTogbGFzdE5hbWUsXG5cdFx0XHRzdHJlZXRBZGRyZXNzOiBzdHJlZXRBZGRyZXNzLFxuXHRcdFx0Y2l0eTogY2l0eSxcblx0XHRcdHN0YXRlOiBzdGF0ZSxcblx0XHRcdHppcDogemlwLFxuXHRcdFx0cGhvbmU6IHBob25lXG5cdFx0fSkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gc3ZjLmxvZ2luKGVtYWlsLCBwYXNzd29yZClcblx0XHR9KVxuXHR9XG5cblx0c3ZjLmxvZ2luID0gZnVuY3Rpb24gKGVtYWlsLCBwYXNzd29yZCkge1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3Nlc3Npb25zJywge1xuXHRcdFx0ZW1haWw6IGVtYWlsLCBwYXNzd29yZDogcGFzc3dvcmRcblx0XHR9KVxuXHRcdC50aGVuKGZ1bmN0aW9uICh2YWwpIHtcblx0XHRcdHN2Yy50b2tlbiA9IHZhbC5kYXRhXG5cdFx0XHQkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1BdXRoJ10gPSB2YWwuZGF0YVxuXHRcdFx0cmV0dXJuIHN2Yy5nZXRVc2VyKClcblx0XHR9LCBmdW5jdGlvbihlcnIpIHtcblx0XHRcdHJldHVybiBlcnJcblx0XHR9KVxuXHR9XG5cblx0c3ZjLmxvZ291dCA9IGZ1bmN0aW9uKCkge1xuXHRcdGRlbGV0ZSAkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1BdXRoJ11cblx0fVxuXG5cdHN2Yy51cGRhdGUgPSBmdW5jdGlvbiAoaWQsIGVtYWlsLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBzdHJlZXRBZGRyZXNzLCBjaXR5LCBzdGF0ZSwgemlwLCBwaG9uZSkge1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvdXNlcnMvdXBkYXRlJywge1xuXHRcdFx0aWQ6IGlkLFxuXHRcdFx0ZW1haWw6IGVtYWlsLFxuXHRcdFx0Zmlyc3ROYW1lOiBmaXJzdE5hbWUsXG5cdFx0XHRsYXN0TmFtZTogbGFzdE5hbWUsXG5cdFx0XHRzdHJlZXRBZGRyZXNzOiBzdHJlZXRBZGRyZXNzLFxuXHRcdFx0Y2l0eTogY2l0eSxcblx0XHRcdHN0YXRlOiBzdGF0ZSxcblx0XHRcdHppcDogemlwLFxuXHRcdFx0cGhvbmU6IHBob25lXG5cdFx0fSlcblx0fVxuXG5cdHN2Yy51cGRhdGVQYXNzd29yZCA9IGZ1bmN0aW9uIChpZCwgbmV3UGFzc3dvcmQpIHtcblx0XHRyZXR1cm4gJGh0dHAucHV0KCcvYXBpL3VzZXJzL3VwZGF0ZVBhc3N3b3JkJywge1xuXHRcdFx0aWQ6IGlkLFxuXHRcdFx0cGFzc3dvcmQ6IG5ld1Bhc3N3b3JkXG5cdFx0fSlcblx0fVxuXG5cdHN2Yy51cGRhdGVDaGlsZCA9IGZ1bmN0aW9uIChjaGlsZCkge1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvdXNlcnMvdXBkYXRlQ2hpbGQnLCBjaGlsZClcblx0fVxuXG5cdHN2Yy5kZWxldGVDaGlsZCA9IGZ1bmN0aW9uIChjaGlsZCkge1xuXHRcdHJldHVybiAkaHR0cC5wdXQoJy9hcGkvdXNlcnMvZGVsZXRlQ2hpbGQnLCBjaGlsZClcblx0fVxuXG5cdHN2Yy5hZGRDaGlsZCA9IGZ1bmN0aW9uIChhZHVsdElkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBkb2IsIG5vdGVzKSB7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMvYWRkQ2hpbGQnLCB7XG5cdFx0XHRhZHVsdElkOiBhZHVsdElkLFxuXHRcdFx0Zmlyc3ROYW1lOiBmaXJzdE5hbWUsXG5cdFx0XHRsYXN0TmFtZTogbGFzdE5hbWUsXG5cdFx0XHRkb2I6IGRvYixcblx0XHRcdG5vdGVzOiBub3Rlc1xuXHRcdH0pXG5cdH1cblxuXHRzdmMuZ2V0QWxsQ2hpbGRyZW4gPSBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS91c2Vycy9nZXRBbGxDaGlsZHJlbicpXG5cdH1cblxufSkiXX0=
