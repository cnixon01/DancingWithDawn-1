angular.module("app",["ngRoute"]),angular.module("app").controller("ClassCtrl",["$scope","ClassSVC","$location",function(e,o,l){e.addClass=function(t,e,n,a,r){o.addClass(t,e,n,a,r).then(function(t){l.path("/admin-classes")})},o.getAllClasses().then(function(t){e.classes=t.data}),e.setClassToUpdate=function(t){e.currentAdmin.classToUpdate=t},e.updateClass=function(t){o.updateClass(t).then(function(t){l.path("/admin-classes")})},e.deleteClass=function(t){o.deleteClass(t).then(function(t){l.path("/admin-classes")})},o.getAllChildren().then(function(t){e.children=t.data})}]),angular.module("app").controller("AdminLoginCtrl",["$scope","AdminSvc","$location",function(s,i,u){s.login=function(t,e){s.loginError=!1,s.errorMessage="",i.login(t,e).then(function(t){if(401==t.status)return s.errorMessage=t.data,!(s.loginError=!0);s.$emit("login",t.data),u.path("/admin-account")})},s.register=function(t,e,n,a,r,o,l){if(n!=a)return s.registerError=!0,!(s.errorMessage="Error: Passwords must match");s.registerError=!1,i.register(t,e,n,r,o,l).then(function(t){s.$emit("login",t.data),u.path("/admin-account")})}}]),angular.module("app").service("AdminSvc",["$http",function(l){var s=this;s.getAdmin=function(){return l.get("/api/admin")},s.register=function(t,e,n,a,r,o){return l.post("/api/admin",{username:e,password:n,email:t,firstName:a,lastName:r,phone:o}).then(function(){return s.login(e,n)})},s.checkToken=function(t){return l.defaults.headers.common["X-Auth"]=window.sessionStorage.token,s.getAdmin()},s.login=function(t,e){return l.post("/api/admin-sessions",{username:t,password:e}).then(function(t){return window.sessionStorage.token=t.data,l.defaults.headers.common["X-Auth"]=t.data,s.getAdmin()},function(t){return t})},s.logout=function(){delete l.defaults.headers.common["X-Auth"],sessionStorage.clear()},s.update=function(t,e,n,a,r,o){return l.put("/api/admin/update",{id:t,username:e,firstName:n,lastName:a,email:r,phone:o})},s.updatePassword=function(t,e){return l.put("/api/admin/updatePassword",{id:t,password:e})},s.updateBio=function(t,e){return l.put("/api/admin/updateBio",{id:t,bio:e})},s.getAllUsers=function(){return l.get("/api/admin/getAllUsers")}}]),angular.module("app").controller("AdminCtrl",["$scope","AdminSvc","$location",function(n,t,e){n.init=function(){window.sessionStorage.token&&t.checkToken().then(function(t){n.currentAdmin=t.data})},n.$on("login",function(t,e){n.currentAdmin=e}),n.logout=function(){t.logout(),delete n.currentAdmin,e.path("/admin")}}]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","$location","$http",function(n,t,e,a){n.init=function(){window.sessionStorage.token&&t.checkToken().then(function(t){n.currentUser=t.data})},n.$on("login",function(t,e){n.currentUser=e}),n.logout=function(){t.logout(),delete n.currentUser,e.path("/login")}}]),angular.module("app").controller("ChildCtrl",["$scope","UserSvc","$location",function(t,o,l){t.addChild=function(t,e,n,a,r){o.addChild(t,e,n,a,r).then(function(t){l.path("/user-account")})}}]),angular.module("app").service("ClassSVC",["$http",function(o){var t=this;t.addClass=function(t,e,n,a,r){return o.post("/api/classes/addClass",{title:t,description:e,time:n,days:a,album:r})},t.updateClass=function(t){return o.put("/api/classes/updateClass",t)},t.deleteClass=function(t){return o.put("/api/classes/deleteClass",t)},t.getAllClasses=function(){return o.get("/api/classes/getAllClasses")},t.getAllChildren=function(){return o.get("/api/classes/getAllChildren")}}]),angular.module("app").controller("ClientsCtrl",["$scope","AdminSvc",function(e,t){t.getAllUsers().then(function(t){e.clients=t.data})}]),angular.module("app").controller("ContentCtrl",["$scope","ContentSvc","$location",function(n,a,r){a.getAllFaqs().then(function(t){n.faq=t.data}),n.setFaqToUpdate=function(t){n.currentAdmin.faqToUpdate=t},n.updateFaq=function(t){a.updateFaq(t).then(function(t){r.path("/cm-faq")})},n.addFaq=function(t,e){n.inputError=!1,n.errorMessage="",t||(n.inputError=!0,n.errorMessage="Submission must include a question"),e||(n.inputError=!0,n.errorMessage="Submission must include an answer"),a.addFaq(t,e).then(function(t){r.path("/cm-faq")})}}]),angular.module("app").service("ContentSvc",["$http",function(n){this.getAllFaqs=function(){return n.get("/api/content/getAllFaqs")},this.addFaq=function(t,e){return n.post("/api/content/addFaq",{question:t,answer:e})},this.updateFaq=function(t){return n.put("/api/content/updateFaq",t)}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(a,r,o){a.login=function(t,e){a.loginError=!1,a.errorMessage="";var n=t.toLowerCase();r.login(n,e).then(function(t){if(401==t.status)return a.errorMessage=t.data,!(a.loginError=!0);a.$emit("login",t.data),o.path("/user-account")})}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(c,p,m){c.register=function(t,e,n,a,r,o,l,s,i,u){if(e!=n)return c.registerError=!0,!(c.errorMessage="Error: Passwords must match");c.registerError=!1;var d=t.toLowerCase();p.register(d,e,a,r,o,l,s,i,u).then(function(t){c.$emit("login",t.data),m.path("/user-account")})}}]),angular.module("app").controller("ResetCtrl",["$scope","UserSvc","$location",function(a,r,t){a.resetPassword=function(e){a.invalidEmail=!1,a.passwordReset=!1,a.InvalidEmailMessage="";var t=e.toLowerCase(),n=Math.random().toString(36).slice(-10);r.resetPassword(t,n).then(function(t){if(401==t.status)return console.log("applying invalid email"),a.invalidEmail=t.data,!(a.invalidEmail=!0);a.passwordReset=!0,r.email(e,n)})}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{templateUrl:"index.html"}).when("/classes",{templateUrl:"classes.html"}).when("/about",{templateUrl:"about.html"}).when("/faq",{controller:"ContentCtrl",templateUrl:"faq.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"registration.html"}).when("/reset-password",{controller:"ResetCtrl",templateUrl:"reset-password.html"}).when("/user-account",{controller:"UserCtrl",templateUrl:"user/user-account.html"}).when("/update-user-account",{controller:"UpdateCtrl",templateUrl:"user/update-user-account.html"}).when("/update-user-password",{controller:"UpdateCtrl",templateUrl:"user/update-user-password.html"}).when("/add-child",{controller:"ChildCtrl",templateUrl:"user/add-child.html"}).when("/update-child",{controller:"UserCtrl",templateUrl:"user/update-child.html"}).when("/user-classes",{templateUrl:"user/user-classes.html"}).when("/user-photos",{templateUrl:"user/user-photos.html"}).when("/user-payments",{templateUrl:"user/user-payments.html"}).when("/user-forms",{templateUrl:"user/user-forms.html"}).when("/admin",{controller:"AdminLoginCtrl",templateUrl:"admin/admin-login.html"}).when("/admin-register",{controller:"AdminLoginCtrl",templateUrl:"admin/registration.html"}).when("/admin-account",{templateUrl:"admin/admin-account.html"}).when("/update-admin-account",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-account.html"}).when("/update-admin-password",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-password.html"}).when("/update-admin-bio",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-bio.html"}).when("/admin-classes",{controller:"ClassCtrl",templateUrl:"admin/admin-classes.html"}).when("/admin-add-class",{controller:"ClassCtrl",templateUrl:"admin/admin-add-class.html"}).when("/admin-update-class",{controller:"ClassCtrl",templateUrl:"admin/admin-update-class.html"}).when("/admin-clients",{controller:"ClientsCtrl",templateUrl:"admin/admin-clients.html"}).when("/admin-photos",{templateUrl:"admin/admin-photos.html"}).when("/admin-payments",{templateUrl:"admin/admin-payments.html"}).when("/admin-forms",{templateUrl:"admin/admin-forms.html"}).when("/cm",{controller:"ContentCtrl",templateUrl:"cm/cm.html"}).when("/cm-faq",{controller:"ContentCtrl",templateUrl:"cm/cm-faq.html"}).when("/cm-faq-add",{controller:"ContentCtrl",templateUrl:"cm/cm-faq-add.html"}).when("/cm-faq-edit",{controller:"ContentCtrl",templateUrl:"cm/cm-faq-edit.html"}),e.html5Mode(!0)}]),angular.module("app").controller("UpdateAdminCtrl",["$scope","AdminSvc","$location",function(a,l,s){a.update=function(t,e,n,a,r,o){l.update(t,e,n,a,r,o).then(function(t){s.path("/admin-account")})},a.updatePassword=function(t,e,n){if(e!=n)return!(a.passwordsMatch=!0);a.passwordsMatch=!1,l.updatePassword(t,e).then(function(t){s.path("/admin-account")})},a.updateBio=function(t,e){l.updateBio(t,e).then(function(t){s.path("/admin-account")})}}]),angular.module("app").controller("UpdateCtrl",["$scope","UserSvc","$location",function(d,c,p){d.update=function(t,e,n,a,r,o,l,s,i){var u=e.toLowerCase();c.update(t,u,n,a,r,o,l,s,i).then(function(t){d.currentUser.email=u,p.path("/user-account")})},d.updatePassword=function(t,e,n){if(e!=n)return!(d.passwordsMatch=!0);d.passwordsMatch=!1,c.updatePassword(t,e).then(function(t){p.path("/user-account")})}}]),angular.module("app").controller("UserCtrl",["$scope","UserSvc","$location",function(e,n,a){n.getAllChildren().then(function(t){e.children=t.data}),e.setChildToUpdate=function(t){e.currentUser.childToUpdate=t},e.updateChild=function(t){n.updateChild(t).then(function(t){a.path("/user-account")})},e.deleteChild=function(t){n.deleteChild(t).then(function(t){a.path("/user-account")})}}]),angular.module("app").service("UserSvc",["$http",function(u){var d=this;d.getUser=function(){return u.get("/api/users")},d.register=function(t,e,n,a,r,o,l,s,i){return u.post("/api/users",{email:t,password:e,firstName:n,lastName:a,streetAddress:r,city:o,state:l,zip:s,phone:i}).then(function(){return d.login(t,e)})},d.checkToken=function(){return u.defaults.headers.common["X-Auth"]=window.sessionStorage.token,d.getUser()},d.login=function(t,e){return u.post("/api/sessions",{email:t,password:e}).then(function(t){return window.sessionStorage.token=t.data,u.defaults.headers.common["X-Auth"]=t.data,d.getUser()},function(t){return t})},d.logout=function(){delete u.defaults.headers.common["X-Auth"],sessionStorage.clear()},d.update=function(t,e,n,a,r,o,l,s,i){return u.put("/api/users/update",{id:t,email:e,firstName:n,lastName:a,streetAddress:r,city:o,state:l,zip:s,phone:i})},d.updatePassword=function(t,e){return u.put("/api/users/updatePassword",{id:t,password:e})},d.resetPassword=function(t,e){return u.put("/api/users/resetPassword",{email:t,newPassword:e})},d.updateChild=function(t){return u.put("/api/users/updateChild",t)},d.deleteChild=function(t){return u.put("/api/users/deleteChild",t)},d.addChild=function(t,e,n,a,r){return u.post("/api/users/addChild",{adultId:t,firstName:e,lastName:n,dob:a,notes:r})},d.getAllChildren=function(){return u.get("/api/users/getAllChildren")},d.email=function(t,e){return u.post("/api/users/sendEmail",{email:t,newPassword:e})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
