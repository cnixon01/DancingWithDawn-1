angular.module("app",["ngRoute"]),angular.module("app").controller("ClassCtrl",["$scope","ClassSVC","$location",function(e,r,o){e.students=[],e.addClass=function(t,e,n,a,l){r.addClass(t,e,n,a,l).then(function(t){o.path("/admin-classes")})},r.getAllClasses().then(function(t){e.classes=t.data}),e.setClassToUpdate=function(t){e.currentAdmin.classToUpdate=t},e.updateClass=function(t){r.updateClass(t).then(function(t){o.path("/admin-classes")})},e.deleteClass=function(t){r.deleteClass(t).then(function(t){o.path("/admin-classes")})},r.getAllChildren().then(function(t){e.children=t.data}),e.addToClass=function(t,e){console.log("class "+t),console.log("students before put request "+t.children),t.children.includes(e)?console.log("child already added"):t.children.push(e),r.addToClass(t),console.log("students after put request "+t.children)},e.removeFromClass=function(t){e.items.splice(t,1)},e.removeAll=function(t){r.removeAll(t)}}]),angular.module("app").controller("AdminLoginCtrl",["$scope","AdminSvc","$location",function(s,i,c){s.login=function(t,e){s.loginError=!1,s.errorMessage="",i.login(t,e).then(function(t){if(401==t.status)return s.errorMessage=t.data,!(s.loginError=!0);s.$emit("login",t.data),c.path("/admin-account")})},s.register=function(t,e,n,a,l,r,o){if(n!=a)return s.registerError=!0,!(s.errorMessage="Error: Passwords must match");s.registerError=!1,i.register(t,e,n,l,r,o).then(function(t){s.$emit("login",t.data),c.path("/admin-account")})}}]),angular.module("app").service("AdminSvc",["$http",function(o){var s=this;s.getAdmin=function(){return o.get("/api/admin")},s.register=function(t,e,n,a,l,r){return o.post("/api/admin",{username:e,password:n,email:t,firstName:a,lastName:l,phone:r}).then(function(){return s.login(e,n)})},s.checkToken=function(t){return o.defaults.headers.common["X-Auth"]=window.sessionStorage.token,s.getAdmin()},s.login=function(t,e){return o.post("/api/admin-sessions",{username:t,password:e}).then(function(t){return window.sessionStorage.token=t.data,o.defaults.headers.common["X-Auth"]=t.data,s.getAdmin()},function(t){return t})},s.logout=function(){delete o.defaults.headers.common["X-Auth"],sessionStorage.clear()},s.update=function(t,e,n,a,l,r){return o.put("/api/admin/update",{id:t,username:e,firstName:n,lastName:a,email:l,phone:r})},s.updatePassword=function(t,e){return o.put("/api/admin/updatePassword",{id:t,password:e})},s.updateBio=function(t,e){return o.put("/api/admin/updateBio",{id:t,bio:e})},s.getAllUsers=function(){return o.get("/api/admin/getAllUsers")}}]),angular.module("app").controller("AdminCtrl",["$scope","AdminSvc","$location",function(n,t,e){n.init=function(){window.sessionStorage.token&&t.checkToken().then(function(t){n.currentAdmin=t.data})},n.$on("login",function(t,e){n.currentAdmin=e}),n.logout=function(){t.logout(),delete n.currentAdmin,e.path("/admin")}}]),angular.module("app").controller("AdminContentCtrl",["$scope","AdminContentSvc","$location",function(r,o,s){o.getAllHomepageElements().then(function(t){r.homepage_content=t.data}),o.getAllClassesElements().then(function(t){r.classes_content=t.data}),o.getAllClasses().then(function(t){r.classes=t.data}),o.getAllAboutElements().then(function(t){r.about_content=t.data}),o.getAllFaqElements().then(function(t){r.faq_content=t.data}),o.getAllFaqs().then(function(t){r.faq=t.data}),r.setFaqToUpdate=function(t){r.currentAdmin.faqToUpdate=t},r.updateFaq=function(t){o.updateFaq(t).then(function(t){s.path("/cm-faq")})},r.addFaq=function(t,e){if(r.inputError=!1,r.errorMessage="",!t||!e)return r.inputError=!0,void(r.errorMessage="All text fields must contain content");o.addFaq(t,e).then(function(t){s.path("/cm-faq")})},r.deleteFaq=function(t){o.deleteFaq(t).then(function(t){s.path("/cm-faq")})},r.addElement=function(t,e,n,a){r.inputError=!1,r.errorMessage="",o.addElement(t,e,n,a).then(function(t){s.path("/cm")})},r.setElementToUpdate=function(t){r.currentAdmin.elementToUpdate=t},r.updateElement=function(t){o.updateElement(t).then(function(t){s.path("/cm")})},r.addClass=function(t,e,n,a,l){if(console.log("addClass Called!"),r.inputError=!1,r.errorMessage="",!t||!l)return r.inputError=!0,void(r.errorMessage="All text fields must contain content");o.addClass(t,e,n,a,l).then(function(t){s.path("/cm-classes")})}}]),angular.module("app").service("AdminContentSvc",["$http",function(r){var t=this;t.getAllElements=function(){return r.get("/api/content/getAllElements")},t.getAllHomepageElements=function(){return r.get("/api/content/getAllHomepageElements")},t.getAllClassesElements=function(){return r.get("/api/content/getAllClassesElements")},t.getAllClasses=function(){return r.get("/api/content/getAllClasses")},t.getAllAboutElements=function(){return r.get("/api/content/getAllAboutElements")},t.getAllFaqElements=function(){return r.get("/api/content/getAllFaqElements")},t.addElement=function(t,e,n,a){return r.post("/api/content/addElement",{name:t,location:e,description:n,value:a})},t.updateElement=function(t){return r.put("/api/content/updateElement",t)},t.getAllFaqs=function(){return r.get("/api/content/getAllFaqs")},t.addFaq=function(t,e){return r.post("/api/content/addFaq",{question:t,answer:e})},t.updateFaq=function(t){return r.put("/api/content/updateFaq",t)},t.deleteFaq=function(t){return r.put("/api/content/deleteFaq",t)},t.addClass=function(t,e,n,a,l){return console.log("Service add class called!"),r.post("/api/content/addClass",{title:t,subtitle:e,icon:a,color:n,description:l})}}]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","$location","$http",function(n,t,e,a){n.init=function(){window.sessionStorage.token&&t.checkToken().then(function(t){n.currentUser=t.data})},n.$on("login",function(t,e){n.currentUser=e}),n.logout=function(){t.logout(),delete n.currentUser,e.path("/login")}}]),angular.module("app").controller("ChildCtrl",["$scope","UserSvc","$location",function(t,r,o){t.addChild=function(t,e,n,a,l){r.addChild(t,e,n,a,l).then(function(t){o.path("/user-account")})}}]),angular.module("app").service("ClassSVC",["$http",function(r){var t=this;t.addClass=function(t,e,n,a,l){return r.post("/api/classes/addClass",{title:t,description:e,time:n,days:a,album:l})},t.updateClass=function(t){return r.put("/api/classes/updateClass",t)},t.deleteClass=function(t){return r.put("/api/classes/deleteClass",t)},t.getAllClasses=function(){return r.get("/api/classes/getAllClasses")},t.getAllChildren=function(){return r.get("/api/classes/getAllChildren")},t.addToClass=function(t){return r.put("/api/classes/addToClass",t)},t.removeAll=function(t){return r.put("/api/classes/removeAll",t)}}]),angular.module("app").controller("ClientsCtrl",["$scope","AdminSvc",function(e,t){t.getAllUsers().then(function(t){e.clients=t.data})}]),angular.module("app").controller("ContentCtrl",["$scope","ContentSvc",function(n,t){t.getAllElements().then(function(t){angular.forEach(t.data,function(t,e){n[t.name]=t.value})}),t.getAllClasses().then(function(t){n.classes=t.data}),t.getAllFaqs().then(function(t){n.faq=t.data})}]),angular.module("app").service("ContentSvc",["$http",function(t){this.getAllElements=function(){return t.get("/api/content/getAllElements")},this.getAllClasses=function(){return t.get("/api/content/getAllClasses")},this.getAllFaqs=function(){return t.get("/api/content/getAllFaqs")}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(a,l,r){a.login=function(t,e){a.loginError=!1,a.errorMessage="";var n=t.toLowerCase();l.login(n,e).then(function(t){if(401==t.status)return a.errorMessage=t.data,!(a.loginError=!0);a.$emit("login",t.data),r.path("/user-account")})}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(d,m,p){d.register=function(t,e,n,a,l,r,o,s,i,c){if(e!=n)return d.registerError=!0,!(d.errorMessage="Error: Passwords must match");d.registerError=!1;var u=t.toLowerCase();m.register(u,e,a,l,r,o,s,i,c).then(function(t){d.$emit("login",t.data),p.path("/user-account")})}}]),angular.module("app").controller("ResetCtrl",["$scope","UserSvc","$location",function(a,l,t){a.resetPassword=function(e){a.invalidEmail=!1,a.passwordReset=!1,a.InvalidEmailMessage="";var t=e.toLowerCase(),n=Math.random().toString(36).slice(-10);l.resetPassword(t,n).then(function(t){if(401==t.status)return console.log("applying invalid email"),a.invalidEmail=t.data,!(a.invalidEmail=!0);a.passwordReset=!0,l.email(e,n)})}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{controller:"ContentCtrl",templateUrl:"index.html"}).when("/classes",{controller:"ContentCtrl",templateUrl:"classes.html"}).when("/about",{controller:"ContentCtrl",templateUrl:"about.html"}).when("/faq",{controller:"ContentCtrl",templateUrl:"faq.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"registration.html"}).when("/reset-password",{controller:"ResetCtrl",templateUrl:"reset-password.html"}).when("/user-account",{controller:"UserCtrl",templateUrl:"user/user-account.html"}).when("/update-user-account",{controller:"UpdateCtrl",templateUrl:"user/update-user-account.html"}).when("/update-user-password",{controller:"UpdateCtrl",templateUrl:"user/update-user-password.html"}).when("/add-child",{controller:"ChildCtrl",templateUrl:"user/add-child.html"}).when("/update-child",{controller:"UserCtrl",templateUrl:"user/update-child.html"}).when("/user-classes",{templateUrl:"user/user-classes.html"}).when("/user-photos",{templateUrl:"user/user-photos.html"}).when("/user-payments",{templateUrl:"user/user-payments.html"}).when("/user-forms",{templateUrl:"user/user-forms.html"}).when("/admin",{controller:"AdminLoginCtrl",templateUrl:"admin/admin-login.html"}).when("/admin-register",{controller:"AdminLoginCtrl",templateUrl:"admin/registration.html"}).when("/admin-account",{templateUrl:"admin/admin-account.html"}).when("/update-admin-account",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-account.html"}).when("/update-admin-password",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-password.html"}).when("/update-admin-bio",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-bio.html"}).when("/admin-classes",{controller:"ClassCtrl",templateUrl:"admin/admin-classes.html"}).when("/admin-add-class",{controller:"ClassCtrl",templateUrl:"admin/admin-add-class.html"}).when("/admin-update-class",{controller:"ClassCtrl",templateUrl:"admin/admin-update-class.html"}).when("/admin-clients",{controller:"ClientsCtrl",templateUrl:"admin/admin-clients.html"}).when("/admin-photos",{templateUrl:"admin/admin-photos.html"}).when("/admin-payments",{templateUrl:"admin/admin-payments.html"}).when("/admin-forms",{templateUrl:"admin/admin-forms.html"}).when("/cm",{controller:"AdminContentCtrl",templateUrl:"cm/cm.html"}).when("/cm-element-add",{controller:"AdminContentCtrl",templateUrl:"cm/cm-element-add.html"}).when("/cm-element-edit",{controller:"AdminContentCtrl",templateUrl:"cm/cm-element-edit.html"}).when("/cm-homepage",{controller:"AdminContentCtrl",templateUrl:"cm/cm-homepage.html"}).when("/cm-classes",{controller:"AdminContentCtrl",templateUrl:"cm/cm-classes.html"}).when("/cm-about",{controller:"AdminContentCtrl",templateUrl:"cm/cm-about.html"}).when("/cm-class-add",{controller:"AdminContentCtrl",templateUrl:"cm/cm-class-add.html"}).when("/cm-class-edit",{controller:"AdminContentCtrl",templateUrl:"cm/cm-class-edit.html"}).when("/cm-faq",{controller:"AdminContentCtrl",templateUrl:"cm/cm-faq.html"}).when("/cm-faq-add",{controller:"AdminContentCtrl",templateUrl:"cm/cm-faq-add.html"}).when("/cm-faq-edit",{controller:"AdminContentCtrl",templateUrl:"cm/cm-faq-edit.html"}),e.html5Mode(!0)}]),angular.module("app").controller("UpdateAdminCtrl",["$scope","AdminSvc","$location",function(a,o,s){a.update=function(t,e,n,a,l,r){o.update(t,e,n,a,l,r).then(function(t){s.path("/admin-account")})},a.updatePassword=function(t,e,n){if(e!=n)return!(a.passwordsMatch=!0);a.passwordsMatch=!1,o.updatePassword(t,e).then(function(t){s.path("/admin-account")})},a.updateBio=function(t,e){o.updateBio(t,e).then(function(t){s.path("/admin-account")})}}]),angular.module("app").controller("UpdateCtrl",["$scope","UserSvc","$location",function(u,d,m){u.update=function(t,e,n,a,l,r,o,s,i){var c=e.toLowerCase();d.update(t,c,n,a,l,r,o,s,i).then(function(t){u.currentUser.email=c,m.path("/user-account")})},u.updatePassword=function(t,e,n){if(e!=n)return!(u.passwordsMatch=!0);u.passwordsMatch=!1,d.updatePassword(t,e).then(function(t){m.path("/user-account")})}}]),angular.module("app").controller("UserCtrl",["$scope","UserSvc","$location",function(e,n,a){n.getAllChildren().then(function(t){e.children=t.data}),e.setChildToUpdate=function(t){e.currentUser.childToUpdate=t},e.updateChild=function(t){n.updateChild(t).then(function(t){a.path("/user-account")})},e.deleteChild=function(t){n.deleteChild(t).then(function(t){a.path("/user-account")})}}]),angular.module("app").service("UserSvc",["$http",function(c){var u=this;u.getUser=function(){return c.get("/api/users")},u.register=function(t,e,n,a,l,r,o,s,i){return c.post("/api/users",{email:t,password:e,firstName:n,lastName:a,streetAddress:l,city:r,state:o,zip:s,phone:i}).then(function(){return u.login(t,e)})},u.checkToken=function(){return c.defaults.headers.common["X-Auth"]=window.sessionStorage.token,u.getUser()},u.login=function(t,e){return c.post("/api/sessions",{email:t,password:e}).then(function(t){return window.sessionStorage.token=t.data,c.defaults.headers.common["X-Auth"]=t.data,u.getUser()},function(t){return t})},u.logout=function(){delete c.defaults.headers.common["X-Auth"],sessionStorage.clear()},u.update=function(t,e,n,a,l,r,o,s,i){return c.put("/api/users/update",{id:t,email:e,firstName:n,lastName:a,streetAddress:l,city:r,state:o,zip:s,phone:i})},u.updatePassword=function(t,e){return c.put("/api/users/updatePassword",{id:t,password:e})},u.resetPassword=function(t,e){return c.put("/api/users/resetPassword",{email:t,newPassword:e})},u.updateChild=function(t){return c.put("/api/users/updateChild",t)},u.deleteChild=function(t){return c.put("/api/users/deleteChild",t)},u.addChild=function(t,e,n,a,l){return c.post("/api/users/addChild",{adultId:t,firstName:e,lastName:n,dob:a,notes:l})},u.getAllChildren=function(){return c.get("/api/users/getAllChildren")},u.email=function(t,e){return c.post("/api/users/sendEmail",{email:t,newPassword:e})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
