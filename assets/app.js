angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc",function(n,t){n.$on("login",function(t,e){n.currentUser=e}),n.logout=function(){t.logout(),delete n.currentUser}}]),angular.module("app").controller("ChildCtrl",["$scope","UserSvc","$location",function(t,r,s){t.addChild=function(t,e,n,o,l){r.addChild(t,e,n,o,l).then(function(t){s.path("/user-account")})}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(n,o,l){n.login=function(t,e){o.login(t,e).then(function(t){n.$emit("login",t.data),l.path("/user-account")})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(e,t){e.addPost=function(){e.postBody&&(console.log(e.postBody),t.create({body:e.postBody}).success(function(t){e.posts.unshift(t),e.postBody=null}))},t.fetch().success(function(t){e.posts=t})}]),angular.module("app").service("PostsSvc",["$http",function(e){this.fetch=function(){return e.get("/api/posts")},this.create=function(t){return e.post("/api/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(c,i,p){c.register=function(t,e,n,o,l,r,s,a,u){i.register(t,e,n,o,l,r,s,a,u).then(function(t){c.$emit("login",t.data),p.path("/user-account")})}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{templateUrl:"index.html"}).when("/classes",{templateUrl:"classes.html"}).when("/about",{templateUrl:"about.html"}).when("/faq",{templateUrl:"faq.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login-form.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"registration-form.html"}).when("/user-account",{controller:"UserCtrl",templateUrl:"user-account.html"}).when("/update-user-account",{controller:"UpdateCtrl",templateUrl:"update-user-account.html"}).when("/add-child",{controller:"ChildCtrl",templateUrl:"add-child.html"}).when("/update-child",{controller:"UserCtrl",templateUrl:"update-child.html"}).when("/user-classes",{templateUrl:"user-classes.html"}).when("/user-photos",{templateUrl:"user-photos.html"}).when("/user-payments",{templateUrl:"user-payments.html"}).when("/user-forms",{templateUrl:"user-forms.html"}).when("/posts",{controller:"PostsCtrl",templateUrl:"posts.html"})}]),angular.module("app").controller("UpdateCtrl",["$scope","UserSvc","$location",function(t,c,i){t.update=function(t,e,n,o,l,r,s,a,u){c.update(t,e,n,o,l,r,s,a,u).then(function(t){i.path("/user-account")})}}]),angular.module("app").controller("UserCtrl",["$scope","UserSvc","$location",function(e,n,o){n.getAllChildren().then(function(t){e.children=t.data}),e.setChildToUpdate=function(t){e.currentUser.childToUpdate=t},e.updateChild=function(t){n.updateChild(t).then(function(t){o.path("/user-account")})}}]),angular.module("app").service("UserSvc",["$http",function(c){var i=this;i.getUser=function(){return c.get("/api/users")},i.register=function(t,e,n,o,l,r,s,a,u){return c.post("/api/users",{email:t,password:e,firstName:n,lastName:o,streetAddress:l,city:r,state:s,zip:a,phone:u}).then(function(){return i.login(t,e)})},i.login=function(t,e){return c.post("/api/sessions",{email:t,password:e}).then(function(t){return i.token=t.data,c.defaults.headers.common["X-Auth"]=t.data,i.getUser()})},i.logout=function(){delete c.defaults.headers.common["X-Auth"]},i.update=function(t,e,n,o,l,r,s,a,u){return c.put("/api/users/update",{id:t,email:e,firstName:n,lastName:o,streetAddress:l,city:r,state:s,zip:a,phone:u})},i.updateChild=function(t){return c.put("/api/users/updateChild",t)},i.addChild=function(t,e,n,o,l){return console.log(t),c.post("/api/users/addChild",{adultId:t,firstName:e,lastName:n,dob:o,notes:l})},i.getAllChildren=function(){return c.get("/api/users/getAllChildren")}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
