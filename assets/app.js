angular.module("app",["ngRoute"]),angular.module("app").controller("AdminLoginCtrl",["$scope","AdminSvc","$location",function(l,u,s){l.login=function(t,e){l.loginError=!1,l.errorMessage="",u.login(t,e).then(function(t){if(401==t.status)return l.errorMessage=t.data,!(l.loginError=!0);l.$emit("login",t.data),s.path("/admin-account")})},l.register=function(t,e,n,r,o,a,i){if(n!=r)return l.registerError=!0,!(l.errorMessage="Error: Passwords must match");l.registerError=!1,u.register(t,e,n,o,a,i).then(function(t){l.$emit("login",t.data),s.path("/admin-account")})}}]),angular.module("app").service("AdminSvc",["$http",function(i){var l=this;l.getAdmin=function(){return i.get("/api/admin")},l.register=function(t,e,n,r,o,a){return i.post("/api/admin",{username:e,password:n,email:t,firstName:r,lastName:o,phone:a}).then(function(){return l.login(e,n)})},l.login=function(t,e){return i.post("/api/admin-sessions",{username:t,password:e}).then(function(t){return l.token=t.data,i.defaults.headers.common["X-Auth"]=t.data,l.getAdmin()},function(t){return t})},l.logout=function(){delete i.defaults.headers.common["X-Auth"]},l.update=function(t,e,n,r,o,a){return i.put("/api/admin/update",{id:t,username:e,firstName:n,lastName:r,email:o,phone:a})},l.updatePassword=function(t,e){return i.put("/api/admin/updatePassword",{id:t,password:e})},l.updateBio=function(t,e){return i.put("/api/admin/updateBio",{id:t,bio:e})}}]),angular.module("app").controller("AdminCtrl",["$scope","AdminSvc","$location",function(n,t,e){n.$on("login",function(t,e){n.currentAdmin=e}),n.logout=function(){t.logout(),delete n.currentAdmin,e.path("/admin")}}]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","$location",function(n,t,e){n.$on("login",function(t,e){n.currentUser=e}),n.logout=function(){t.logout(),delete n.currentUser,e.path("/login")}}]),angular.module("app").controller("ChildCtrl",["$scope","UserSvc","$location",function(t,a,i){t.addChild=function(t,e,n,r,o){a.addChild(t,e,n,r,o).then(function(t){i.path("/user-account")})}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(n,r,o){n.login=function(t,e){n.loginError=!1,n.errorMessage="",r.login(t,e).then(function(t){if(401==t.status)return n.errorMessage=t.data,!(n.loginError=!0);n.$emit("login",t.data),o.path("/user-account")})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(e,t){e.addPost=function(){e.postBody&&(console.log(e.postBody),t.create({body:e.postBody}).success(function(t){e.posts.unshift(t),e.postBody=null}))},t.fetch().success(function(t){e.posts=t})}]),angular.module("app").service("PostsSvc",["$http",function(e){this.fetch=function(){return e.get("/api/posts")},this.create=function(t){return e.post("/api/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(d,c,p){d.register=function(t,e,n,r,o,a,i,l,u,s){if(e!=n)return d.registerError=!0,!(d.errorMessage="Error: Passwords must match");d.registerError=!1,c.register(t,e,r,o,a,i,l,u,s).then(function(t){d.$emit("login",t.data),p.path("/user-account")})}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(t,e){t.when("/",{templateUrl:"index.html"}).when("/classes",{templateUrl:"classes.html"}).when("/about",{templateUrl:"about.html"}).when("/faq",{templateUrl:"faq.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login-form.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"registration-form.html"}).when("/user-account",{controller:"UserCtrl",templateUrl:"user-account.html"}).when("/update-user-account",{controller:"UpdateCtrl",templateUrl:"update-user-account.html"}).when("/update-user-password",{controller:"UpdateCtrl",templateUrl:"update-user-password.html"}).when("/add-child",{controller:"ChildCtrl",templateUrl:"add-child.html"}).when("/update-child",{controller:"UserCtrl",templateUrl:"update-child.html"}).when("/user-classes",{templateUrl:"user-classes.html"}).when("/user-photos",{templateUrl:"user-photos.html"}).when("/user-payments",{templateUrl:"user-payments.html"}).when("/user-forms",{templateUrl:"user-forms.html"}).when("/admin",{controller:"AdminLoginCtrl",templateUrl:"admin/admin-login.html"}).when("/admin-register",{controller:"AdminLoginCtrl",templateUrl:"admin/registration.html"}).when("/admin-account",{templateUrl:"admin/admin-account.html"}).when("/update-admin-account",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-account.html"}).when("/update-admin-password",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-password.html"}).when("/update-admin-bio",{controller:"UpdateAdminCtrl",templateUrl:"admin/update-admin-bio.html"}),e.html5Mode(!0)}]),angular.module("app").controller("UpdateAdminCtrl",["$scope","AdminSvc","$location",function(r,i,l){r.update=function(t,e,n,r,o,a){i.update(t,e,n,r,o,a).then(function(t){l.path("/admin-account")})},r.updatePassword=function(t,e,n){if(e!=n)return!(r.passwordsMatch=!0);r.passwordsMatch=!1,i.updatePassword(t,e).then(function(t){l.path("/admin-account")})},r.updateBio=function(t,e){i.updateBio(t,e).then(function(t){l.path("/admin-account")})}}]),angular.module("app").controller("UpdateCtrl",["$scope","UserSvc","$location",function(r,s,d){r.update=function(t,e,n,r,o,a,i,l,u){s.update(t,e,n,r,o,a,i,l,u).then(function(t){d.path("/user-account")})},r.updatePassword=function(t,e,n){if(e!=n)return!(r.passwordsMatch=!0);r.passwordsMatch=!1,s.updatePassword(t,e).then(function(t){d.path("/user-account")})}}]),angular.module("app").controller("UserCtrl",["$scope","UserSvc","$location",function(e,n,r){n.getAllChildren().then(function(t){e.children=t.data}),e.setChildToUpdate=function(t){e.currentUser.childToUpdate=t},e.updateChild=function(t){n.updateChild(t).then(function(t){r.path("/user-account")})},e.deleteChild=function(t){n.deleteChild(t).then(function(t){r.path("/user-account")})}}]),angular.module("app").service("UserSvc",["$http",function(s){var d=this;d.getUser=function(){return s.get("/api/users")},d.register=function(t,e,n,r,o,a,i,l,u){return s.post("/api/users",{email:t,password:e,firstName:n,lastName:r,streetAddress:o,city:a,state:i,zip:l,phone:u}).then(function(){return d.login(t,e)})},d.login=function(t,e){return s.post("/api/sessions",{email:t,password:e}).then(function(t){return d.token=t.data,s.defaults.headers.common["X-Auth"]=t.data,d.getUser()},function(t){return t})},d.logout=function(){delete s.defaults.headers.common["X-Auth"]},d.update=function(t,e,n,r,o,a,i,l,u){return s.put("/api/users/update",{id:t,email:e,firstName:n,lastName:r,streetAddress:o,city:a,state:i,zip:l,phone:u})},d.updatePassword=function(t,e){return s.put("/api/users/updatePassword",{id:t,password:e})},d.updateChild=function(t){return s.put("/api/users/updateChild",t)},d.deleteChild=function(t){return s.put("/api/users/deleteChild",t)},d.addChild=function(t,e,n,r,o){return s.post("/api/users/addChild",{adultId:t,firstName:e,lastName:n,dob:r,notes:o})},d.getAllChildren=function(){return s.get("/api/users/getAllChildren")}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
