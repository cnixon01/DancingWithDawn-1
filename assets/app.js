angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(n){n.$on("login",function(t,o){n.currentUser=o})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(n,e,r){n.login=function(t,o){e.login(t,o).then(function(t){n.$emit("login",t.data),r.path("/")})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(o,t){o.addPost=function(){o.postBody&&(console.log(o.postBody),t.create({body:o.postBody}).success(function(t){o.posts.unshift(t),o.postBody=null}))},t.fetch().success(function(t){o.posts=t})}]),angular.module("app").service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(t){return o.post("/api/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(n,e,r){n.register=function(t,o){e.register(t,o).then(function(t){n.$emit("login",t.data),r.path("/")})}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(n){var e=this;e.getUser=function(){return n.get("/api/users")},e.register=function(t,o){return n.post("/api/users",{username:t,password:o}).then(function(){return e.login(t,o)})},e.login=function(t,o){return n.post("/api/sessions",{username:t,password:o}).then(function(t){return e.token=t.data,n.defaults.headers.common["X-Auth"]=t.data,e.getUser()})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuY3RybC5qcyIsInBvc3RzLnN2Yy5qcyIsInJlZ2lzdGVyLmN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1c2VyLnN2Yy5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRvbiIsIl8iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJVc2VyU3ZjIiwiJGxvY2F0aW9uIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInJlc3BvbnNlIiwiJGVtaXQiLCJkYXRhIiwicGF0aCIsIlBvc3RzU3ZjIiwiYWRkUG9zdCIsInBvc3RCb2R5IiwiY29uc29sZSIsImxvZyIsImNyZWF0ZSIsImJvZHkiLCJzdWNjZXNzIiwicG9zdCIsInBvc3RzIiwidW5zaGlmdCIsImZldGNoIiwic2VydmljZSIsIiRodHRwIiwidGhpcyIsImdldCIsInJlZ2lzdGVyIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJzdmMiLCJnZXRVc2VyIiwidmFsIiwidG9rZW4iLCJkZWZhdWx0cyIsImhlYWRlcnMiLCJjb21tb24iXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLE1BQUEsQ0FDQSxZQ0RBRCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsa0JBQUEsQ0FBQSxTQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLElBQUEsUUFBQSxTQUFBQyxFQUFBQyxHQUNBSCxFQUFBSSxZQUFBRCxPQ0hBTixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsWUFBQSxDQUFBLFNBQUEsVUFBQSxZQUFBLFNBQUFDLEVBQUFLLEVBQUFDLEdBQ0FOLEVBQUFPLE1BQUEsU0FBQUMsRUFBQUMsR0FDQUosRUFBQUUsTUFBQUMsRUFBQUMsR0FDQUMsS0FBQSxTQUFBQyxHQUNBWCxFQUFBWSxNQUFBLFFBQUFELEVBQUFFLE1BQ0FQLEVBQUFRLEtBQUEsV0NOQWpCLFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxZQUFBLENBQUEsU0FBQSxXQUFBLFNBQUFDLEVBQUFlLEdBRUFmLEVBQUFnQixRQUFBLFdBQ0FoQixFQUFBaUIsV0FDQUMsUUFBQUMsSUFBQW5CLEVBQUFpQixVQUNBRixFQUFBSyxPQUFBLENBQ0FDLEtBQUFyQixFQUFBaUIsV0FDQUssUUFBQSxTQUFBQyxHQUNBdkIsRUFBQXdCLE1BQUFDLFFBQUFGLEdBQ0F2QixFQUFBaUIsU0FBQSxTQUtBRixFQUFBVyxRQUFBSixRQUFBLFNBQUFFLEdBQ0F4QixFQUFBd0IsTUFBQUEsT0NoQkEzQixRQUFBQyxPQUFBLE9BQ0E2QixRQUFBLFdBQUEsQ0FBQSxRQUFBLFNBQUFDLEdBQ0FDLEtBQUFILE1BQUEsV0FDQSxPQUFBRSxFQUFBRSxJQUFBLGVBRUFELEtBQUFULE9BQUEsU0FBQUcsR0FDQSxPQUFBSyxFQUFBTCxLQUFBLGFBQUFBLE9DTkExQixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsZUFBQSxDQUFBLFNBQUEsVUFBQSxZQUFBLFNBQUFDLEVBQUFLLEVBQUFDLEdBQ0FOLEVBQUErQixTQUFBLFNBQUF2QixFQUFBQyxHQUNBSixFQUFBMEIsU0FBQXZCLEVBQUFDLEdBQ0FDLEtBQUEsU0FBQUMsR0FDQVgsRUFBQVksTUFBQSxRQUFBRCxFQUFBRSxNQUNBUCxFQUFBUSxLQUFBLFdDTkFqQixRQUFBQyxPQUFBLE9BQ0FrQyxPQUFBLENBQUEsaUJBQUEsU0FBQUMsR0FDQUEsRUFDQUMsS0FBQSxJQUFBLENBQUFuQyxXQUFBLFlBQUFvQyxZQUFBLGVBQ0FELEtBQUEsWUFBQSxDQUFBbkMsV0FBQSxlQUFBb0MsWUFBQSxrQkFDQUQsS0FBQSxTQUFBLENBQUFuQyxXQUFBLFlBQUFvQyxZQUFBLGtCQ0xBdEMsUUFBQUMsT0FBQSxPQUNBNkIsUUFBQSxVQUFBLENBQUEsUUFBQSxTQUFBQyxHQUNBLElBQUFRLEVBQUFQLEtBQ0FPLEVBQUFDLFFBQUEsV0FDQSxPQUFBVCxFQUFBRSxJQUFBLGVBR0FNLEVBQUFMLFNBQUEsU0FBQXZCLEVBQUFDLEdBQ0EsT0FBQW1CLEVBQUFMLEtBQUEsYUFBQSxDQUNBZixTQUFBQSxFQUFBQyxTQUFBQSxJQUNBQyxLQUFBLFdBQ0EsT0FBQTBCLEVBQUE3QixNQUFBQyxFQUFBQyxNQUlBMkIsRUFBQTdCLE1BQUEsU0FBQUMsRUFBQUMsR0FDQSxPQUFBbUIsRUFBQUwsS0FBQSxnQkFBQSxDQUNBZixTQUFBQSxFQUFBQyxTQUFBQSxJQUNBQyxLQUFBLFNBQUE0QixHQUdBLE9BRkFGLEVBQUFHLE1BQUFELEVBQUF6QixLQUNBZSxFQUFBWSxTQUFBQyxRQUFBQyxPQUFBLFVBQUFKLEVBQUF6QixLQUNBdUIsRUFBQUMiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFtcblx0J25nUm91dGUnXG5dKSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0FwcGxpY2F0aW9uQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUpIHtcblx0JHNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbihfLCB1c2VyKSB7XG5cdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlclxuXHR9KVxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXJTdmMsICRsb2NhdGlvbikge1xuXHQkc2NvcGUubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG5cdFx0VXNlclN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG5cdFx0LnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cdFx0XHQkc2NvcGUuJGVtaXQoJ2xvZ2luJywgcmVzcG9uc2UuZGF0YSlcblx0XHRcdCRsb2NhdGlvbi5wYXRoKCcvJylcblx0XHR9KVxuXHR9XG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ1Bvc3RzQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFBvc3RzU3ZjKSB7XG5cblx0JHNjb3BlLmFkZFBvc3QgPSBmdW5jdGlvbiAoKSB7XG5cdFx0aWYoJHNjb3BlLnBvc3RCb2R5KSB7XG5cdFx0XHRjb25zb2xlLmxvZygkc2NvcGUucG9zdEJvZHkpXG5cdFx0XHRQb3N0c1N2Yy5jcmVhdGUoe1xuXHRcdFx0XHRib2R5OiAkc2NvcGUucG9zdEJvZHlcblx0XHRcdH0pLnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3QpIHtcblx0XHRcdFx0JHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdClcblx0XHRcdFx0JHNjb3BlLnBvc3RCb2R5ID0gbnVsbFxuXHRcdFx0fSlcblx0XHR9XG5cdH1cblx0XG5cdFBvc3RzU3ZjLmZldGNoKCkuc3VjY2VzcyhmdW5jdGlvbiAocG9zdHMpIHtcblx0XHQkc2NvcGUucG9zdHMgPSBwb3N0c1xuXHR9KVxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdQb3N0c1N2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xuXHR0aGlzLmZldGNoID0gZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcG9zdHMnKVxuXHR9XG5cdHRoaXMuY3JlYXRlID0gZnVuY3Rpb24gKHBvc3QpIHtcblx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9wb3N0cycsIHBvc3QpXG5cdH1cbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignUmVnaXN0ZXJDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCBVc2VyU3ZjLCAkbG9jYXRpb24pIHtcblx0JHNjb3BlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuXHRcdFVzZXJTdmMucmVnaXN0ZXIodXNlcm5hbWUsIHBhc3N3b3JkKVxuXHRcdC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXHRcdFx0JHNjb3BlLiRlbWl0KCdsb2dpbicsIHJlc3BvbnNlLmRhdGEpXG5cdFx0XHQkbG9jYXRpb24ucGF0aCgnLycpXG5cdFx0fSlcblx0fVxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb25maWcoZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG5cdCRyb3V0ZVByb3ZpZGVyXG5cdC53aGVuKCcvJywgeyBjb250cm9sbGVyOiAnUG9zdHNDdHJsJywgdGVtcGxhdGVVcmw6ICdwb3N0cy5odG1sJyB9KVxuXHQud2hlbignL3JlZ2lzdGVyJywgeyBjb250cm9sbGVyOiAnUmVnaXN0ZXJDdHJsJywgdGVtcGxhdGVVcmw6ICdyZWdpc3Rlci5odG1sJyB9KVxuXHQud2hlbignL2xvZ2luJywgeyBjb250cm9sbGVyOiAnTG9naW5DdHJsJywgdGVtcGxhdGVVcmw6ICdsb2dpbi5odG1sJyB9KVxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG5cdHZhciBzdmMgPSB0aGlzXG5cdHN2Yy5nZXRVc2VyID0gZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdXNlcnMnKVxuXHR9XG5cblx0c3ZjLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3VzZXJzJywge1xuXHRcdFx0dXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmRcblx0XHR9KS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBzdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuXHRcdH0pXG5cdH1cblxuXHRzdmMubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoJy9hcGkvc2Vzc2lvbnMnLCB7XG5cdFx0XHR1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZFxuXHRcdH0pLnRoZW4oZnVuY3Rpb24gKHZhbCkge1xuXHRcdFx0c3ZjLnRva2VuID0gdmFsLmRhdGFcblx0XHRcdCRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydYLUF1dGgnXSA9IHZhbC5kYXRhXG5cdFx0XHRyZXR1cm4gc3ZjLmdldFVzZXIoKVxuXHRcdH0pXG5cdH1cbn0pIl19
